Función -> Resultado

6.2 Clase 'Character'

	6.2.1 Clasificación de caracteres
	
		Por tipos de caracter:
		
			boolean isDigit(char)
				Character.isDigit('8') -> True
				Character.isDigit('p'); -> False
				Character.isDigit('?'); -> False
				
			boolean isLetter(char)
				Character.isLetter('8'); -> False
				Character.isLetter('p'); -> True
				Character.isDigit('?'); -> False
			
			boolean isLetterOrDigit(char)
				Character.isLetterOrDigit('8'); -> True
				Character.isLetterOrDigit('p'); -> True
				Character.isLetterOrDigit('?'); -> False
		
		Por maiúsculas ou minúsculas		
			boolean isLowerCase(char)
				Character.isLowerCase('p'); -> True
				Character.isLowerCase('P'); -> False
				Character.isLowerCase('8'); -> False
			
			boolean isUpperCase(char)
				Character.isUpperCase('p'); -> False
				Character.isUpperCase('P'); -> True
				Character.isUpperCase('8'); -> False
		
		Por tipo de caracter branco:
		
			boolean isSpaceChar(char)
				Character.isSpaceChar(' '); -> True
				Character.isSpaceChar('\n'); -> False
				Character.isSpaceChar('\t'); -> False
						
			boolean isWhitespace(char)
				Character.isWhitespace(' '); -> True
				Character.isWhitespace('\n'); -> True
				Character.isWhitespace('\t'); -> True
				Character.isWhitespace('p'); -> False
					
	6.2.2 Conversión
	
		Conversión entre caracteres:
		
			char toLowerCase(char)
				Character.toLowerCase('A'); -> 'a'
				Character.toLowerCase('a'); -> 'a'
				Character.toLowerCase('8'); -> '8'
				
			char toUpperCase(char)
				Character.toUpperCase('a'); -> 'A'
				Character.toUpperCase('A'); -> 'A'
				Character.toUpperCase('8'); -> '8'
		
		Conversión de caracter a outro tipo:
		
			int digit(char, int base)
				Character.digit('3',10); -> 3
				Character.digit('c',16); -> 12
				
			String toString(char)
				Character.toString('b'); -> "b"
				Character.toString('8'); -> "8"
				Character.toString('b') + Character.toString('8') -> "b8"

		Conversión doutro tipo a caracter:
		
			char forDigit(int, int base)	
				Character.forDigit(3,10); -> '3'
				Character.forDigit(12,16); -> 'c'
			
6.3 Clase Cadea

	6.3.1 Inicialización de cadeas
	
		Literal cadea:
		
			cadea = new String("Literal cadea") ou cadea = "Literal cadea"
		
		Valores doutro tipo:
		
			static String valueOf()
				String.valueOf(1234); -> "1234"
				String.valueOf(-12.34); -> "-12.34"
				String.valueOf('C'); -> "C"
				String.valueOf(false) -> "false"
				
	6.3.2 Comparación
				
		Igualdade:
		
			boolean Cadea.equals(String)
				"Hola mundo".equals("Ola mundo"); -> True
				"Hola mundo".equals("Ola MUNDO"); -> False
			
			boolean Cadea.equalsIgnoreCase(String)
				"Hola mundo".equalsIgnoreCase("Ola mundo"); -> True
				"Hola mundo".equalsIgnoreCase("Ola MUNDO"); -> True
				
			boolean Cadea.regionMatches(int inicio, String comparación, int inicioString, int tamaño)
				"Hola Mundo".regionMatches(0, "Mundo Ola", 6, 4); -> True
				"Hola Mundo".regionMatches(0, "Mundo ola", 6, 4); -> False
			
			boolean Cadea.regionMatches(boolean, int inicio, String comparación, int inicioString, int tamaño)
				"Hola Mundo".regionMatches(true, 0, "Mundo Ola", 6, 4); -> True
				"Hola Mundo".regionMatches(true, 0, "Mundo ola", 6, 4); -> True
			
		Comparación alfabética:
		
			int Cadea.compareTo(String) // Positivo, despois alfabeticamente. Negativo, antes alfabeticamente.
				"Mundo".compareTo("mundo"); -> -32
				"Mundo".compareTo("Aire"); -> 12
				"Aire".compareTo("Torre"); -> -19
				
			int Cadea.compareToIgnoreCase(String) // Positivo, despois alfabeticamente. Negativo, antes alfabeticamente.
				"Mundo".compareToIgnoreCase("mundo"); -> 0
				"Mundo".compareToIgnoreCase("Aire"); -> 12
				"Aire".compareToIgnoreCase("Torre"); -> -19
				
	6.3.3 Concatenación
		
				"Miguel" + " " + "de Cervantes" + " " + "Saavedra; -> "Miguel de Cervantes Saavedra"
				"Resultado: " + 3; -> "Resultado: 3" -> Equivalente a "Resultado: " + String.valueOf(3)
				"Resultado: " + true; -> "Resultado: true" -> Equivalente a "Resultado: " + String.valueOf(true)
				"Resultado: " + a; -> "Resultado: a" -> Equivalente a "Resultado: " + String.valueOf('a')
			
			String Cadea.concat(String)
				"Miguel".concat(" De Cervantes Saavedra"); -> "Miguel de Cervantes Saavedra"
				
	6.3.4 Obtención de caracteres
	
		Obtención un caracter:
		
			char Cadea.charAt(int)
				"Mundo".charAt(2); -> 'n'
				"Mundo".charAt(10); -> Erro!
		
		Obtención dunha subcadea:
		
			String Cadea.substring(Int inicio)
				"Ola mundo".substring(1); -> "la mundo"
			
			String .Cadeasubstring(Int inicio, Int fin)
				"Ola mundo".substring(1, 6); -> "la m"
				
			String Cadea.trim()
				"    Hola mundo    ".trim() -> "Hola mundo"
				
	6.3.5 Lonxitude dunha cadea
	
			int Cadea.length()
				"Ola mundo".length() -> 9
				"".length() -> 0
				
	6.3.6 Búsqueda
	
			int Cadea.indexOf()
			
